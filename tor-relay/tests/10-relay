#!/usr/bin/env python3

import os
import amulet
import socket
from lib import assert_connect

d = amulet.Deployment(series='focal')
d.add('tor-relay', '../builds/tor-relay')

try:
    # Create the deployment described above, give us 900 seconds to do it
    d.setup(timeout=900)

    # Setup will only make sure the services are deployed, related, and in a
    # "started" state. We can employ the sentries to actually make sure there
    # are no more hooks being executed on any of the nodes.
    d.sentry.wait()
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    # Something else has gone wrong, raise the error so we can see it and this
    # will automatically "FAIL" the test.
    raise

# Shorten the names a little to make working with unit data easier
tor_unit = d.sentry['tor-relay'][0]


# Expose the relay service so we can connect to it
d.expose('tor-relay')

print("checking connection to relay port...", end='')
assert_connect(tor_unit.info['public-address'], 9001)
print("OK")

print("check that changing ports works...", end='')
d.configure('tor-relay', {'relay_port': 9002})
assert_connect(tor_unit.info['public-address'], 9002)
d.configure('tor-relay', {'relay_port': 9001})
assert_connect(tor_unit.info['public-address'], 9001)
print("OK")

